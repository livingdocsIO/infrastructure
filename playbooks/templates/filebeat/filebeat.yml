logging.level: info
logging.metrics.enabled: true
logging.json: true

fields_under_root: true

{% if cluster %}
fields:
  '@cluster': {{ cluster }}
{% endif %}

filebeat.inputs:
- type: docker
  ignore_older: 24h
  containers:
    path: '/var/lib/docker/containers'
    stream: 'all'
    ids: ['*']

  multiline:
    pattern: '^$|^[[:space:]]{1,}'
    negate: false
    match: after

  json:
    message_key: msg
    keys_under_root: true
    add_error_key: false
    ignore_decoding_error: true

  processors:
  - add_docker_metadata:
      host: 'unix:///var/run/docker.sock'

- type: docker
  ignore_older: 24h
  containers:
    path: '/var/lib/system-docker/containers'
    stream: 'all'
    ids: ['*']

  multiline:
    pattern: '^$|^[[:space:]]{1,}'
    negate: false
    match: after

  json:
    message_key: msg
    keys_under_root: true
    add_error_key: false
    ignore_decoding_error: true

  processors:
  - add_docker_metadata:
      host: 'unix:///var/run/system-docker.sock'


processors:
- drop_event:
    when:
      equals:
        req.url: '/status'

- rename:
    ignore_missing: true
    fail_on_error: false
    when.has_fields: ['docker.container.labels.io.rancher.container.system']
    fields:
     - from: 'docker.container.labels.io.rancher.container.system'
       to: '@system'

- rename:
    ignore_missing: true
    fail_on_error: false
    when.has_fields: ['docker.container.labels.com.docker.compose.service']
    fields:
     - from: 'docker.container.labels.com.docker.compose.service'
       to: '@system'

- rename:
    ignore_missing: true
    fail_on_error: false
    when.has_fields: ['docker.container.labels.logging.infrastructure']
    fields:
     - from: 'docker.container.labels.io.rancher.stack_service.name'
       to: '@system'

- rename:
    ignore_missing: true
    fail_on_error: false
    fields:
     - from: 'msg'
       to: 'message'

     - from: 'docker.container.id'
       to: '@container_id'

     - from: 'docker.container.image'
       to: '@container_image'

     - from: 'docker.container.name'
       to: '@container_name'

     - from: 'docker.container.labels.com.docker.compose.project'
       to: '@service'

     - from: 'docker.container.labels.io.rancher.stack_service.name'
       to: '@service'

     - from: 'host.name'
       to: '@hostname'

     - from: 'stream'
       to: '@stream'

- drop_fields:
    fields: ['beat', 'offset', 'source', 'input', 'prospector', 'docker', 'v', 'time', 'pid']

setup.template.name: 'logs'
setup.template.pattern: 'logs-*'

output.elasticsearch:
  hosts: {{ elasticsearch_hosts }}
  compression: 6
  index: 'logs-%{[@cluster]}-%{+yyyy.MM.dd}'
  indices:
    - index: 'logs-infrastructure-%{+yyyy.MM.dd}'
      when.has_fields: ['@system']
