#jinja2: trim_blocks:False
global:
  scrape_interval: 10s
  scrape_timeout: 10s
  evaluation_interval: 1m

scrape_configs:
  {% for job in prometheus_federation_target -%}
    {% for job_name in job -%}
      {%- set job_vars = dict(job[job_name] | map('dictsort') | sum(start=[])) -%}
  - job_name: '{{ job_name }}'
    scrape_interval: {{ job_vars.scrape_interval | default("15s") }}
    honor_labels: true
    metrics_path: {{ job_vars.metrics_path | default("/federate") }}
    params:
      match[]:
        - '{__name__=~".+"}'

      {% if 'basic_auth' in job_vars %}
        {% set job_basic_auth = dict(job_vars.basic_auth.value | map('dictsort') | sum(start=[])) %}
    basic_auth:
      username: "{{ job_basic_auth.username }}"
      password: "{{ job_basic_auth.password }}"
      {%- endif %}

    static_configs:
      - targets: {{ job[job_name] | json_query('[?target].target') | to_json }}
        {% if 'labels' in job_vars -%}
          {% set job_labels = dict(job_vars.labels.value | map('dictsort') | sum(start=[])) -%}
        labels: {{ job_labels | to_yaml }}
        {%- endif -%}
    {%- endfor %}
  {% endfor %}

  - job_name: 'prometheus'
    static_configs:
      {% for node in groups['prometheus'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9090']
        labels: {cluster: 'infrastructure', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}

  - job_name: 'node'
    static_configs:
      {% for node in groups['cluster_infrastructure'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9100']
        labels: {cluster: 'infrastructure', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_production'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9100']
        labels: {cluster: 'production', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_development'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9100']
        labels: {cluster: 'development', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}

  - job_name: 'coredns'
    static_configs:
      {% for node in groups['cluster_infrastructure'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9153']
        labels: {cluster: 'infrastructure', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_production'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9153']
        labels: {cluster: 'production', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_development'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9153']
        labels: {cluster: 'development', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}

  - job_name: 'cadvisor'
    static_configs:
      {% for node in groups['cluster_infrastructure'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:8080']
        labels: {cluster: 'infrastructure', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_production'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:8080']
        labels: {cluster: 'production', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
      {% for node in groups['cluster_development'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:8080']
        labels: {cluster: 'development', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}

    metric_relabel_configs:
      - action: 'replace'
        source_labels: ['container_label_io_rancher_project_name']
        target_label: 'stack_name'

      - action: 'replace'
        source_labels: ['container_label_io_rancher_stack_service_name']
        regex: '[a-zA-Z0-9_-]*/([a-zA-Z0-9_-]*)'
        target_label: 'service_name'

      - action: 'replace'
        source_labels: ['id']
        regex: '/docker/(.+)'
        target_label: 'container_id'

      - action: 'replace'
        source_labels: ['container_label_io_rancher_container_system']
        target_label: 'system'

      - action: 'labelmap'
        regex: 'container_label_prometheus_label_(.+)'

      - action: 'replace'
        source_labels: ['image']
        target_label: 'image_name'

      - action: 'replace'
        source_labels: ['name']
        target_label: 'container_name'

      - action: 'labeldrop'
        regex: '(id|image|name|container_label_.*)'

  - job_name: 'elasticsearch'
    static_configs:
      {% for node in groups['elasticsearch'] -%}
      - targets: ['{{ hostvars[node].privateIP }}:9108']
        labels: {cluster: 'infrastructure', instance: "{{ hostvars[node].hostname }}"}
      {% endfor %}
