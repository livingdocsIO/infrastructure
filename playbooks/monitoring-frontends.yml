---
- name: Monitoring Frontends
  hosts: monitoring
  become: true
  gather_facts: true
  vars:
    grafana_root_url: ''
    grafana_admin_user: ''
    grafana_admin_password: ''
    grafana_db_url: ''
    grafana_github_client_id: ''
    grafana_github_client_secret: ''
    grafana_github_team_ids: ''
    grafana_s3_bucket: ''
    grafana_s3_bucket_region: ''
    grafana_s3_access_key: ''
    grafana_s3_secret_key: ''

  tasks:
  - name: Create monitoring-frontends directory
    file: path=/etc/monitoring-frontends state=directory

  - set_fact:
      elasticsearch_ansible_host: "{{ groups['elasticsearch'] | first }}"
      elasticsearch_ansible_host_ip: "{{ hostvars['{{ elasticsearch_ansible_host }}'].privateIP }}"
      elasticsearch_host: "http://{{ elasticsearch_ansible_host_ip }}:9200"

  - name: Generate grafana.ini
    template:
      src: templates/monitoring-frontends/grafana.ini
      dest: '/etc/monitoring-frontends/grafana.ini'
      owner: root
      group: root
      mode: 0644

  - name: Generate docker-compose.yml
    template:
      src: templates/monitoring-frontends/docker-compose.yml
      dest: '/var/lib/rancher/conf/monitoring-frontends.yml'
      owner: root
      group: root
      mode: 0644

  - name: Deploy monitoring-frontends images on server
    raw: ros service enable /var/lib/rancher/conf/monitoring-frontends.yml

  - name: Start kibana on server
    raw: ros service up kibana

  - name: Start elasticsearch-hq on server
    raw: ros service up elasticsearch-hq

  - name: Start grafana on server
    raw: ros service up grafana
