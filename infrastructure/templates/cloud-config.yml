#cloud-config
rancher:
  resize_device: /dev/vda
  console: ubuntu
  sysctl:
    vm.swappiness: 1

    # Required by elasticsearch
    vm.max_map_count: 262144

    # Default limit for the os as processes/docker should limit max file descriptors
    fs.file-max: 10000000
    fs.nr_open: 10000000

    # Have a larger connection range available
    net.ipv4.ip_local_port_range: 16384 65000

    # Reuse closed sockets faster
    net.ipv4.tcp_tw_reuse: 1
    net.ipv4.tcp_fin_timeout: 15

    # The maximum number of "backlogged sockets".  Default is 128.
    net.core.somaxconn: 65535

    # 16MB per socket - which sounds like a lot,
    # but will virtually never consume that much.
    net.core.rmem_max: 16777216
    net.core.wmem_max: 16777216

    # Various network tunables
    net.ipv4.tcp_max_syn_backlog: 20480
    net.ipv4.tcp_max_tw_buckets: 400000
    net.ipv4.tcp_no_metrics_save: 1
    net.ipv4.tcp_rmem: 4096 87380 16777216
    net.ipv4.tcp_syn_retries: 2
    net.ipv4.tcp_synack_retries: 2
    net.ipv4.tcp_wmem: 4096 65536 16777216
    net.ipv4.tcp_keepalive_time: 60
    net.ipv4.tcp_keepalive_probes: 6
    net.ipv4.tcp_keepalive_intvl: 10

    # Disable IPv6 as most hosters don't support it by default
    net.ipv6.conf.all.disable_ipv6: 1
    net.ipv6.conf.default.disable_ipv6: 1
    net.ipv6.conf.lo.disable_ipv6: 1

    # increase ARP cache settings
    net.ipv4.neigh.default.gc_thresh1: 8096
    net.ipv4.neigh.default.gc_thresh2: 12288
    net.ipv4.neigh.default.gc_thresh3: 16384

    # Connection tracking to prevent dropped connections (usually issue on LBs)
    net.netfilter.nf_conntrack_max: 262144
    net.netfilter.nf_conntrack_tcp_timeout_established: 86400
    # net.ipv4.netfilter.ip_conntrack_generic_timeout: 120

  system_docker:
    log_driver: json-file
    log_opts:
      max-size: '50m'
      max-file: '3'

  docker:
    log_driver: json-file
    log_opts:
      max-size: '10m'
      max-file: '3'

  services:
    user-volumes:
      volumes:
        - /home:/home
        - /opt:/opt
        - /var/lib/docker:/var/lib/docker
        - /var/lib/rancher:/var/lib/rancher
        - /var/lib/kubelet:/var/lib/kubelet
        - /etc/kubernetes:/etc/kubernetes

    digitalocean-agent:
      image: digitalocean/do-agent:3
      restart: always
      net: host
      volumes: ['/proc:/agent/proc:ro', '/sys:/host/sys:ro']
      labels: ['io.rancher.os.after=network', 'io.rancher.os.scope=system']
